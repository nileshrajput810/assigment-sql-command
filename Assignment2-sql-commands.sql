use mavenmovies;

show tables;
-- Retrieve the total number of rentals made in the Sakila database.
select count(*) from rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

-- Display the first name and last name of customers in uppercase.
select upper(first_name), upper (last_name) from customer;

-- Extract the month from the rental date and display it alongside the rental ID.
select rental_id, month(rental_date) from rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id, count(*) from rental group by customer_id;

-- Find the total revenue generated by each store.
select sum(amount) from payment group by 

-- Display the title of the movie, customer s first name, and last name who rented it.
select title, customer.first_name, customer.last_name
FROM film
inner JOIN inventory ON film.film_id = inventory.film_id , 
inner JOIN rental ON inventory.inventory_id = rental.inventory_id , 
inner JOIN customer ON rental.customer_id = customer.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
SELECT first_name, last_name
FROM actor
JOIN film_actor ON actor.actor_id = film_actor.actor_id
JOIN film ON film_actor.film_id = film.film_id
WHERE film.title = 'Gone with the Wind';

-- Determine the total number of rentals for each category of movies.
SELECT category.name AS category_name, COUNT(rental.rental_id) AS total_rentals
FROM rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
GROUP BY category.name;

-- Find the average rental rate of movies in each language.
SELECT language.name AS language_name, AVG(film.rental_rate) AS average_rental_rate
FROM film
JOIN language ON film.language_id = language.language_id
GROUP BY language.name;

-- Retrieve the customer names along with the total amount they've spent on rentals.
SELECT customer.first_name, customer.last_name, SUM(payment.amount) AS total_amount_spent
FROM customer
JOIN payment ON customer.customer_id = payment.customer_id
JOIN rental ON customer.customer_id = rental.customer_id
GROUP BY customer.customer_id;

-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
SELECT customer.first_name, customer.last_name, film.title AS movie_title, city.city
FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN rental ON customer.customer_id = rental.customer_id
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
WHERE city.city = 'London'
GROUP BY customer.customer_id, film.title;

-- Display the top 5 rented movies along with the number of times they've been rented.
SELECT film.title AS movie_title, COUNT(rental.rental_id) AS rental_count
FROM film
JOIN inventory ON film.film_id = inventory.film_id
JOIN rental ON inventory.inventory_id = rental.inventory_id
GROUP BY film.film_id
ORDER BY rental_count DESC
LIMIT 5;

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT customer.customer_id, customer.first_name, customer.last_name
FROM customer
JOIN rental ON customer.customer_id = rental.customer_id
JOIN inventory ON rental.inventory_id = inventory.inventory_id
WHERE inventory.store_id IN (1, 2)
GROUP BY customer.customer_id
HAVING COUNT(DISTINCT inventory.store_id) = 2;
